version: '3'
networks:
  gb-network:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:
  mysql_data:

services:
  zookeeper:
    image: zookeeper:3.4.9
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zookeeper:2888:3888
    volumes:
      - ./data/zookeeper/data:/data
      - ./data/zookeeper/datalog:/datalog
  kafka1:
    image: confluentinc/cp-kafka:5.3.0
    hostname: kafka1
    ports:
      - "9091:9091"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19091,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9091
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./data/kafka1/data:/var/lib/kafka/data
    depends_on:
      - zookeeper
  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka1:19091"
    depends_on:
      - kafka1
  go-server:
    build:
      context: ..
      dockerfile: serviceAnaliseTweet/Dockerfile
    ports:
      - 8080:8080
    env_file:
      - ./env_file.env
    environment:
      - KAFKA_URL=kafka1:19091
    depends_on:
      - kafdrop
      - kafka1
      - zookeeper
      - python-server
  python-server:
    build:
      context: ..
      dockerfile: tweetApi/Dockerfile
    env_file:
      - ./env_file.env
    environment:
      - KAFKA_URL=kafka1:19091
    depends_on:
      - kafdrop
      - kafka1
      - zookeeper
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      -  prometheus_data:/prometheus
    networks:
      - gb-network
    ports:
      - 9090:9090
    depends_on:
      - go-server
  grafana:
    image: grafana/grafana:latest
    ports:
      - 3000:3000
    networks:
      - gb-network
    depends_on:
      - prometheus
  db-mysql:
    hostname: db-mysql
    image: mysql:8.3
    expose:
      - "3308"
    command: mysqld --default-authentication-plugin=mysql_native_password
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: tweetmetrics
      MYSQL_USER: user
      MYSQL_PASSWORD: 1234
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    depends_on:
      - kafka1